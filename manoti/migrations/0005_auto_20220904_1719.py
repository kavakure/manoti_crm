# Generated by Django 3.2.15 on 2022-09-04 15:19

from django.db import migrations, models
import django.db.models.deletion
import manoti.validators


class Migration(migrations.Migration):

    dependencies = [
        ('manoti', '0004_auto_20220902_2020'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=200, verbose_name='Reference')),
                ('account_type', models.CharField(choices=[('savings', 'Savings account'), ('current', 'Current or Credit Card account'), ('cash', 'Cash account')], max_length=200, verbose_name='Account type')),
                ('status', models.CharField(blank=True, choices=[('open', 'Open'), ('closed', 'Closed')], max_length=200, verbose_name='Status')),
                ('currency', models.CharField(blank=True, default='Fbu', help_text='What is the Currency of this financial institution', max_length=200, verbose_name='Currency')),
                ('country', models.CharField(blank=True, default='Burundi', help_text='Indicate the country where the bank/financial instituion is located ', max_length=200, verbose_name='Account country')),
                ('state_province', models.CharField(blank=True, default='Bujumbura', help_text='Indicate the State or Province where the bank/financial instituion is located and/or registered', max_length=200, verbose_name='State/Province')),
                ('website', models.URLField(blank=True, help_text='The website of the bank/financial instituion', max_length=900, verbose_name='Web')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('initial_balance', models.IntegerField(verbose_name='Initial balance')),
                ('timestamp', models.DateField(blank=True, verbose_name='Date')),
                ('minimum_allowed_balance', models.IntegerField(verbose_name='Minimum allowed balance')),
                ('minimum_desired_balance', models.IntegerField(verbose_name='Minimum desired balance')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Bank name')),
                ('account_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='Account number')),
                ('iban_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='IBAN account number')),
                ('swift', models.CharField(blank=True, max_length=200, null=True, verbose_name='IBAN account number')),
                ('address', models.TextField(blank=True, help_text='Please mention here the full address of the financial institution', null=True, verbose_name='Bank address')),
                ('account_owner_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Account owner name')),
                ('account_owner_address', models.TextField(blank=True, help_text='Please mention here the full address of the financial institution', null=True, verbose_name='account owner address')),
            ],
        ),
        migrations.CreateModel(
            name='BankAccountAttachedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=200, verbose_name='Name')),
                ('attachment', models.FileField(blank=True, upload_to='media/uploads', validators=[manoti.validators.validate_file_size], verbose_name='File attached')),
                ('timestamp', models.DateField(blank=True, verbose_name='Timestamp')),
                ('bank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankaccount', verbose_name='Bank Account')),
            ],
        ),
        migrations.CreateModel(
            name='BankAccountLinkedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=200, verbose_name='Name')),
                ('link', models.URLField(blank=True, max_length=900, verbose_name='Link')),
                ('timestamp', models.DateField(blank=True, verbose_name='Timestamp')),
                ('save_original_name', models.BooleanField(default=False, help_text="Save file on server with name 'PR##############-Original filename' (otherwise 'Original filename')", verbose_name='Save with original file name')),
                ('bank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankaccount', verbose_name='Bank Account')),
            ],
        ),
        migrations.CreateModel(
            name='BankEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, verbose_name='Date')),
                ('value_date', models.DateField(blank=True, verbose_name='value date')),
                ('label', models.CharField(blank=True, default='Miscellaneous payment', max_length=200, verbose_name='Label')),
                ('amount', models.IntegerField(verbose_name='Amount')),
                ('check_transfer_number', models.CharField(blank=True, max_length=200, verbose_name='Number (Check/Transfer NÂ°)')),
                ('check_transfer_sender', models.CharField(blank=True, max_length=200, verbose_name='Sender (Check/Transfer sender)')),
                ('bank_of_check', models.CharField(blank=True, max_length=200, verbose_name='Bank (Bank of Check)')),
                ('accounting_account', models.CharField(blank=True, max_length=200, verbose_name='Accounting account')),
                ('subledger_account', models.CharField(blank=True, max_length=200, verbose_name='Subledger account')),
                ('sens', models.FloatField(choices=[(-1, 'Credit'), (1, 'Debit')], help_text='For an accounting account of a customer, use Credit to record a payment you have received\nFor an accounting account of a supplier, use Debit to record a payment you made', verbose_name='Sens')),
                ('bank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankaccount', verbose_name='Bank Account')),
                ('payment_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymenttype', verbose_name='Payment Type')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(default='Draft', max_length=200, verbose_name='Reference')),
                ('vendor_reference', models.CharField(default='Draft', max_length=200, verbose_name='Reference Vendor')),
                ('vendor_invoice_type', models.CharField(choices=[('standard', 'Standard invoice'), ('downpayment', 'Downpayment invoice'), ('credit', 'Credit Note')], default='standard', max_length=200, verbose_name='Status')),
                ('label', models.CharField(blank=True, max_length=200, verbose_name='Label')),
                ('date', models.DateField(verbose_name='Invoice date')),
                ('payment_due', models.DateField(blank=True, null=True, verbose_name='Payment due on')),
                ('note_private', models.TextField(blank=True, null=True, verbose_name='Private note')),
                ('note_public', models.TextField(blank=True, null=True, verbose_name='Public Note')),
                ('total_tax_excl', models.IntegerField(default=0, verbose_name='Amount (excl. tax)')),
                ('tax_amount', models.IntegerField(default=0, verbose_name='Amount tax')),
                ('total_tax_incl', models.IntegerField(default=0, verbose_name='Amount (inc. tax)')),
                ('total_payment', models.IntegerField(default=0, verbose_name='Amount (inc. tax)')),
                ('is_validated', models.BooleanField(default=False, verbose_name='Validated ?')),
                ('is_abandoned', models.BooleanField(default=False, verbose_name='Abandoned ?')),
                ('bank_account', models.ForeignKey(help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankaccount', verbose_name='Bank account')),
                ('payment_terms', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymentterms', verbose_name='Payment terms')),
                ('payment_type', models.ForeignKey(help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymenttype', verbose_name='Payment type')),
                ('third_party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdparty', verbose_name='Customer')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInvoiceAttachedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=200, verbose_name='Name')),
                ('attachment', models.FileField(blank=True, upload_to='media/uploads', validators=[manoti.validators.validate_file_size], verbose_name='File attached')),
                ('timestamp', models.DateField(blank=True, verbose_name='Timestamp')),
                ('cutomer_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.customerinvoice', verbose_name='Customer invoice')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInvoiceContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInvoiceContactType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInvoiceLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('sku', models.CharField(blank=True, max_length=200, verbose_name='Customer SKU')),
                ('sales_tax', models.IntegerField(verbose_name='Sales tax')),
                ('unit_price_tax_excl', models.IntegerField(verbose_name='Unit price (net)')),
                ('unit_price_tax_incl', models.IntegerField(verbose_name='Unit price (Tax incl.)')),
                ('discount', models.IntegerField(blank=True, default=0, verbose_name='Discount')),
                ('quantity', models.IntegerField(default=1, verbose_name='Qty')),
                ('cutomer_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.customerinvoice', verbose_name='Customer invoice')),
                ('line_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.linetype', verbose_name='Type')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInvoiceLinkedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=200, verbose_name='Name')),
                ('link', models.URLField(blank=True, max_length=900, verbose_name='Link')),
                ('timestamp', models.DateField(blank=True, verbose_name='Timestamp')),
                ('save_original_name', models.BooleanField(default=False, help_text="Save file on server with name 'PR##############-Original filename' (otherwise 'Original filename')", verbose_name='Save with original file name')),
                ('cutomer_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.customerinvoice', verbose_name='Customer invoice')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('sales_tax', models.IntegerField(verbose_name='Sales tax')),
                ('quantity', models.IntegerField(default=1, verbose_name='Qty')),
                ('total_tax_excl', models.IntegerField(verbose_name='Total (Tax excl.)')),
                ('total_tax_incl', models.IntegerField(verbose_name='Total (Tax incl.)')),
                ('line_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.linetype', verbose_name='Type')),
                ('proposal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.proposal', verbose_name='Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(default='Draft', max_length=200, verbose_name='Reference')),
                ('vendor_reference', models.CharField(default='Draft', max_length=200, verbose_name='Reference Vendor')),
                ('vendor_invoice_type', models.CharField(choices=[('standard', 'Standard invoice'), ('downpayment', 'Downpayment invoice'), ('credit', 'Credit Note')], default='standard', max_length=200, verbose_name='Status')),
                ('label', models.CharField(blank=True, max_length=200, verbose_name='Label')),
                ('date', models.DateField(verbose_name='Invoice date')),
                ('payment_due', models.DateField(blank=True, null=True, verbose_name='Payment due on')),
                ('note_private', models.TextField(blank=True, null=True, verbose_name='Private note')),
                ('note_public', models.TextField(blank=True, null=True, verbose_name='Public Note')),
                ('total_tax_excl', models.IntegerField(default=0, verbose_name='Amount (excl. tax)')),
                ('tax_amount', models.IntegerField(default=0, verbose_name='Amount tax')),
                ('total_tax_incl', models.IntegerField(default=0, verbose_name='Amount (inc. tax)')),
                ('total_payment', models.IntegerField(default=0, verbose_name='Amount (inc. tax)')),
                ('is_validated', models.BooleanField(default=False, verbose_name='Validated ?')),
                ('is_abandoned', models.BooleanField(default=False, verbose_name='Abandoned ?')),
                ('bank_account', models.ForeignKey(help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankaccount', verbose_name='Bank account')),
                ('payment_terms', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymentterms', verbose_name='Payment terms')),
                ('payment_type', models.ForeignKey(help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymenttype', verbose_name='Payment type')),
                ('third_party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdparty', verbose_name='Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoiceAttachedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=200, verbose_name='Name')),
                ('attachment', models.FileField(blank=True, upload_to='media/uploads', validators=[manoti.validators.validate_file_size], verbose_name='File attached')),
                ('timestamp', models.DateField(blank=True, verbose_name='Timestamp')),
                ('vendor_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.vendorinvoice', verbose_name='Vendor invoice')),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoiceContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoiceContactType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoiceLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('sku', models.CharField(blank=True, max_length=200, verbose_name='Vendor SKU')),
                ('sales_tax', models.IntegerField(verbose_name='Sales tax')),
                ('unit_price_tax_excl', models.IntegerField(verbose_name='Unit price (net)')),
                ('unit_price_tax_incl', models.IntegerField(verbose_name='Unit price (Tax incl.)')),
                ('discount', models.IntegerField(blank=True, default=0, verbose_name='Discount')),
                ('quantity', models.IntegerField(default=1, verbose_name='Qty')),
                ('line_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.linetype', verbose_name='Type')),
                ('vendor_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.vendorinvoice', verbose_name='Vendor invoice')),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoiceLinkedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=200, verbose_name='Name')),
                ('link', models.URLField(blank=True, max_length=900, verbose_name='Link')),
                ('timestamp', models.DateField(blank=True, verbose_name='Timestamp')),
                ('save_original_name', models.BooleanField(default=False, help_text="Save file on server with name 'PR##############-Original filename' (otherwise 'Original filename')", verbose_name='Save with original file name')),
                ('vendor_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.vendorinvoice', verbose_name='Vendor invoice')),
            ],
        ),
        migrations.RenameField(
            model_name='contact',
            old_name='name',
            new_name='last_name',
        ),
        migrations.RemoveField(
            model_name='employee',
            name='username',
        ),
        migrations.AddField(
            model_name='business',
            name='google_map_url',
            field=models.TextField(blank=True, help_text='Google Map URL of the Company/Organization', null=True, verbose_name='Google Map URL'),
        ),
        migrations.AlterField(
            model_name='business',
            name='address',
            field=models.TextField(blank=True, help_text='Please mention here the full address of your Company/Organization', null=True, verbose_name='Full Address'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='average_daily_rate',
            field=models.IntegerField(blank=True, null=True, verbose_name='Average Daily rate'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='average_hourly_rate',
            field=models.IntegerField(blank=True, null=True, verbose_name='Average hourly rate'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='business_phone',
            field=models.CharField(blank=True, help_text='The office or business Phone number of the employee', max_length=30, null=True, verbose_name='Business Phone Number'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True, verbose_name='Date of birth'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='email',
            field=models.EmailField(blank=True, help_text='The email address of the employee', max_length=255, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='employement_end',
            field=models.DateField(blank=True, help_text='Ex: 01/04/2019, The date when The employee left the company', null=True, verbose_name='Employement date ended'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='employement_start',
            field=models.DateField(blank=True, help_text='Ex: 01/04/2019, The date when The employee started working for the company', null=True, verbose_name='Employement date begun'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='hours_worked_per_week',
            field=models.IntegerField(blank=True, null=True, verbose_name='Hours worked (per week)'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='mobile_phone',
            field=models.CharField(blank=True, help_text='The mobile Phone number of the employee', max_length=30, null=True, verbose_name='Mobile Phone Number'),
        ),
        migrations.AlterField(
            model_name='employee',
            name='salary',
            field=models.IntegerField(blank=True, null=True, verbose_name='Salary'),
        ),
        migrations.DeleteModel(
            name='Line',
        ),
        migrations.AddField(
            model_name='vendorinvoicecontact',
            name='contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.contact', verbose_name='Users | Contacts/Addresses'),
        ),
        migrations.AddField(
            model_name='vendorinvoicecontact',
            name='contact_type',
            field=models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.vendorinvoicecontacttype', verbose_name='Users | Contacts/Addresses'),
        ),
        migrations.AddField(
            model_name='vendorinvoicecontact',
            name='third_party',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdparty', verbose_name='Third-party'),
        ),
        migrations.AddField(
            model_name='vendorinvoicecontact',
            name='vendor_invoice',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.vendorinvoice', verbose_name='Vendor invoice'),
        ),
        migrations.AddField(
            model_name='customerinvoicecontact',
            name='contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.contact', verbose_name='Users | Contacts/Addresses'),
        ),
        migrations.AddField(
            model_name='customerinvoicecontact',
            name='contact_type',
            field=models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.vendorinvoicecontacttype', verbose_name='Users | Contacts/Addresses'),
        ),
        migrations.AddField(
            model_name='customerinvoicecontact',
            name='cutomer_invoice',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.customerinvoice', verbose_name='Customer invoice'),
        ),
        migrations.AddField(
            model_name='customerinvoicecontact',
            name='third_party',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdparty', verbose_name='Third-party'),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.business', verbose_name='Bank Account'),
        ),
    ]
