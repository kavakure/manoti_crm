# Generated by Django 3.2.15 on 2022-09-02 17:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import manoti.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='The full name of your Company/Organization', max_length=200, verbose_name='Name')),
                ('address', models.TextField(blank=True, help_text='Google Map URL of the Company/Organization', null=True, verbose_name='Google Map URL')),
                ('po_box', models.CharField(blank=True, help_text='Please mention the postal office box of your Company/Organization', max_length=200, null=True, verbose_name='P.O. Box')),
                ('town', models.CharField(blank=True, help_text='Indicate the town address of your Company/Organization', max_length=200, verbose_name='Town')),
                ('country', models.CharField(blank=True, default='Burundi', help_text='Indicate the country where your Company/Organization is located and/or registered', max_length=200, verbose_name='Country')),
                ('state_province', models.CharField(blank=True, default='Bujumbura', help_text='Indicate the State or Province where your Company/Organization is located and/or registered', max_length=200, verbose_name='State/Province')),
                ('main_currency', models.CharField(blank=True, default='Fbu', help_text='What is the Currency used by your Company/Organization', max_length=200, verbose_name='Main currency')),
                ('phone', models.CharField(blank=True, help_text='The Phone number of your Company/Organization', max_length=30, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, help_text='The email address of your Company/Organization', max_length=255, verbose_name='Email')),
                ('website', models.URLField(blank=True, help_text='The website of your Company/Organization', max_length=900, verbose_name='Web')),
                ('logo', models.FileField(blank=True, help_text='PNG or JPEG, will be used on various documents related to your Company/Organization', upload_to='media/uploads', validators=[manoti.validators.validate_file_size, manoti.validators.validate_document_file_extension], verbose_name='Logo')),
                ('logo_squarred', models.FileField(blank=True, help_text='PNG or JPEG, used for branding accross this platform', upload_to='media/uploads', validators=[manoti.validators.validate_file_size, manoti.validators.validate_document_file_extension], verbose_name='Logo (squarred)')),
                ('note', models.TextField(blank=True, help_text='Any additional note or information about the Company/Organization', null=True, verbose_name='Notes')),
                ('manager_name', models.CharField(blank=True, help_text='Manager(s) name (CEO, director, president...)', max_length=200, verbose_name='Manager(s) name (CEO, director, president...)')),
                ('data_protection_officer', models.CharField(blank=True, help_text='If your organisation is located in the EU, this field is required', max_length=200, verbose_name='Data Protection Officer (DPO, Data Privacy or GDPR contact)')),
                ('capital', models.IntegerField(verbose_name='Capital')),
                ('business_entity_type', models.CharField(blank=True, help_text='If your organisation is located in the EU, this field is required', max_length=200, null=True, verbose_name='Business entity type')),
                ('professional_id_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 1')),
                ('professional_id_2', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 2')),
                ('professional_id_3', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 3')),
                ('professional_id_4', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 4')),
                ('professional_id_5', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 5')),
                ('professional_id_6', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 6')),
                ('vat_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='VAT ID')),
                ('registre_de_commerce', models.CharField(blank=True, max_length=200, null=True, verbose_name='Registre de Commerce')),
                ('object_of_the_company', models.TextField(blank=True, max_length=900, null=True, verbose_name='Object of the company')),
                ('fiscal_year', models.CharField(choices=[('1', 'January'), ('2', 'February'), ('3', 'March'), ('4', 'April'), ('5', 'May'), ('6', 'June'), ('7', 'July'), ('8', 'August'), ('9', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], default='1', max_length=100, verbose_name='Starting month of the fiscal year')),
                ('sales_tax_is_used', models.BooleanField(default=False, verbose_name='Are Sales tax used by your Company/Organization?')),
                ('user', models.ForeignKey(help_text='The user object that owns Company/Organization', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessEntityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(blank=True, max_length=200, verbose_name='Last name')),
                ('first_name', models.CharField(blank=True, max_length=200, verbose_name='First name')),
                ('username', models.CharField(blank=True, max_length=200, unique=True, verbose_name='Frist name')),
                ('is_administrator', models.BooleanField(default=False, verbose_name='Administrator ?')),
                ('is_employee', models.BooleanField(default=True, verbose_name='Employee')),
                ('po_box', models.CharField(blank=True, help_text='Please mention the postal office box of the employee', max_length=200, null=True, verbose_name='P.O. Box')),
                ('city', models.CharField(blank=True, default='Bujumbura', help_text='Indicate the city ot town address of the employee', max_length=200, verbose_name='City')),
                ('country', models.CharField(blank=True, default='Burundi', help_text='Indicate the country where the employee is located and/or registered', max_length=200, verbose_name='Country')),
                ('state_province', models.CharField(blank=True, default='Bujumbura', help_text='Indicate the State or Province where your the employee lives', max_length=200, verbose_name='State/Province')),
                ('mobile_phone', models.CharField(blank=True, help_text='The Phone number of the employee', max_length=30, null=True, verbose_name='Phone Number')),
                ('business_phone', models.CharField(blank=True, help_text='The Phone number of the employee', max_length=30, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, help_text='The email address of your Company/Organization', max_length=255, verbose_name='Email')),
                ('note', models.TextField(blank=True, help_text='Any additional note or information about the employee', null=True, verbose_name='Notes')),
                ('signature', models.TextField(blank=True, null=True, verbose_name='Signature')),
                ('job_postion', models.CharField(blank=True, max_length=30, null=True, verbose_name='Job position')),
                ('average_hourly_rate', models.IntegerField(verbose_name='Average hourly rate')),
                ('average_daily_rate', models.IntegerField(verbose_name='Average Daily rate')),
                ('salary', models.IntegerField(verbose_name='Salary')),
                ('hours_worked_per_week', models.IntegerField(verbose_name='Hours worked (per week)')),
                ('employement_start', models.DateField(blank=True, help_text='Ex: 01/04/2019, The date when The employee started working for the company', verbose_name='Employement date begun')),
                ('employement_end', models.DateField(blank=True, help_text='Ex: 01/04/2019, The date when The employee left the company', verbose_name='Employement date ended')),
                ('date_of_birth', models.DateField(blank=True, verbose_name='Date of birth')),
                ('force_expense_report_validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='force_expense_report_validator', to=settings.AUTH_USER_MODEL, verbose_name='Force expense report validator')),
                ('force_leave_request_validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='force_leave_request_validator', to=settings.AUTH_USER_MODEL, verbose_name='Force leave request validator')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Supervisor')),
                ('user', models.ForeignKey(help_text='The user object related to the employee', on_delete=django.db.models.deletion.CASCADE, related_name='employee_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, default='Mobile', help_text='The type of the phone device', max_length=200, verbose_name='Third party name')),
                ('phone_number', models.CharField(max_length=30, verbose_name='Phone Number')),
            ],
        ),
        migrations.CreateModel(
            name='ThirdPartyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='ThirdParty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='The full name of the Third Party', max_length=200, verbose_name='Third party name')),
                ('alias_name', models.CharField(blank=True, help_text='The Alias name used for other purposes', max_length=200, verbose_name='Alias name (commercial, trademark, ...)')),
                ('prospect_customer', models.CharField(blank=True, choices=[('prospect', 'Prospect'), ('prospect_and_customer', 'Prospect and Customer'), ('customer', 'Customer'), ('none', 'Not a Prospect nor a Customer')], help_text='Defines which type the thirdparty is', max_length=200, verbose_name='Prospect / Customer')),
                ('customer_code', models.CharField(blank=True, max_length=200, verbose_name='Customer code')),
                ('vendor_code', models.CharField(blank=True, max_length=200, verbose_name='Vendor code')),
                ('status', models.CharField(blank=True, choices=[('open', 'Open'), ('closed', 'Closed')], max_length=200, verbose_name='Status')),
                ('address', models.TextField(blank=True, help_text='Google Map URL of the Company/Organization', null=True, verbose_name='Google Map URL')),
                ('po_box', models.CharField(blank=True, help_text='Please mention the postal office box of your Company/Organization', max_length=200, null=True, verbose_name='P.O. Box')),
                ('town', models.CharField(blank=True, help_text='Indicate the town address of your Company/Organization', max_length=200, verbose_name='Town')),
                ('country', models.CharField(blank=True, default='Burundi', help_text='Indicate the country where your Company/Organization is located and/or registered', max_length=200, verbose_name='Country')),
                ('state_province', models.CharField(blank=True, default='Bujumbura', help_text='Indicate the State or Province where your Company/Organization is located and/or registered', max_length=200, verbose_name='State/Province')),
                ('phone', models.CharField(blank=True, help_text='The Phone number of your Company/Organization', max_length=30, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, help_text='The email address of your Company/Organization', max_length=255, verbose_name='Email')),
                ('website', models.URLField(blank=True, help_text='The website of your Company/Organization', max_length=900, verbose_name='Web')),
                ('professional_id_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 1')),
                ('professional_id_2', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 2')),
                ('professional_id_3', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 3')),
                ('professional_id_4', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 4')),
                ('professional_id_5', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 5')),
                ('professional_id_6', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 6')),
                ('vat_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='VAT ID')),
                ('registre_de_commerce', models.CharField(blank=True, max_length=200, null=True, verbose_name='Registre de Commerce')),
                ('sales_tax_is_used', models.BooleanField(default=False, verbose_name='Are Sales tax used by your Company/Organization?')),
                ('workforce', models.IntegerField(blank=True, default=1, verbose_name='workforce')),
                ('capital', models.IntegerField(verbose_name='Capital')),
                ('logo', models.FileField(blank=True, help_text='PNG or JPEG, will be used on various documents related to your Company/Organization', upload_to='media/uploads', validators=[manoti.validators.validate_file_size, manoti.validators.validate_document_file_extension], verbose_name='Logo')),
                ('assigned_representative', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.employee', verbose_name='Business entity type')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.business')),
                ('business_entity_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.businessentitytype', verbose_name='Business entity type')),
                ('third_party_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdpartytype', verbose_name='Third-party type')),
            ],
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='The name of the social Network', max_length=200, verbose_name='Social networks')),
                ('url', models.URLField(blank=True, help_text='The URL of the social Network', null=True, verbose_name='Url')),
                ('network_id', models.CharField(blank=True, help_text='The social network handle or ID of your Company/Organization', max_length=200, null=True, verbose_name='Social Network ID')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.business')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessAccountant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text="The full name of the Company/Organization's accountant", max_length=200, verbose_name='Full name')),
                ('address', models.TextField(blank=True, help_text="Please mention here the full address of your Company/Organization's accountant", null=True, verbose_name='Full Address')),
                ('po_box', models.CharField(blank=True, help_text="Please mention the postal office box of your Company/Organization's accountant", max_length=200, null=True, verbose_name='P.O. Box')),
                ('town', models.CharField(blank=True, help_text="Indicate the town address of your Company/Organization's accountant", max_length=200, verbose_name='Town')),
                ('country', models.CharField(blank=True, default='Burundi', help_text="Indicate the country where Company/Organization's accountant is located and/or registered", max_length=200, verbose_name='Country')),
                ('state_province', models.CharField(blank=True, default='Bujumbura', help_text="Indicate the State or Province where Company/Organization's accountant is located and/or registered", max_length=200, verbose_name='State/Province')),
                ('phone', models.CharField(blank=True, help_text="The Phone number of your Company/Organization's accountant", max_length=30, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, help_text="The email address of your Company/Organization's accountant", max_length=255, verbose_name='Email')),
                ('website', models.URLField(blank=True, help_text="The website of your Company/Organization's accountant", max_length=900, verbose_name='Web')),
                ('code', models.CharField(blank=True, help_text="The full name of the Company/Organization's accountant", max_length=200, verbose_name='Accountant code')),
                ('note', models.TextField(blank=True, help_text="Any additional note or information about the Company/Organization's accountant", null=True, verbose_name='Notes')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.business')),
            ],
        ),
    ]
