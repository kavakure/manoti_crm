# Generated by Django 3.2.15 on 2022-10-09 12:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import manoti.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AvailabilityDelay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_private', models.BooleanField(default=True, help_text='Is this entry private to the the user that added it ?', verbose_name='Is private')),
                ('reference', models.CharField(max_length=200, verbose_name='Reference')),
                ('account_type', models.CharField(choices=[('savings', 'Savings account'), ('current', 'Current or Credit Card account'), ('cash', 'Cash account')], max_length=200, verbose_name='Account type')),
                ('status', models.BooleanField(default=False, verbose_name='Is this account active ?')),
                ('currency', models.CharField(blank=True, default='Fbu', help_text='What is the Currency of this financial institution', max_length=200, verbose_name='Currency')),
                ('country', models.CharField(blank=True, default='Burundi', help_text='Indicate the country where the bank/financial instituion is located ', max_length=200, verbose_name='Account country')),
                ('state_province', models.CharField(blank=True, default='Bujumbura', help_text='Indicate the State or Province where the bank/financial instituion is located and/or registered', max_length=200, verbose_name='State/Province')),
                ('website', models.URLField(blank=True, help_text='The website of the bank/financial instituion', max_length=900, verbose_name='Web')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('balance', models.IntegerField(default=0, verbose_name='Balance')),
                ('initial_balance', models.IntegerField(default=0, verbose_name='Initial balance')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('minimum_allowed_balance', models.IntegerField(blank=True, default=0, null=True, verbose_name='Minimum allowed balance')),
                ('minimum_desired_balance', models.IntegerField(blank=True, default=0, null=True, verbose_name='Minimum desired balance')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Bank name')),
                ('account_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='Account number')),
                ('iban_number', models.CharField(blank=True, max_length=200, null=True, verbose_name='IBAN account number')),
                ('swift', models.CharField(blank=True, max_length=200, null=True, verbose_name='IBAN account number')),
                ('address', models.TextField(blank=True, help_text='Please mention here the full address of the financial institution', null=True, verbose_name='Bank address')),
                ('account_owner_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Account owner name')),
                ('account_owner_address', models.TextField(blank=True, help_text='Please mention here the full address of the financial institution', null=True, verbose_name='account owner address')),
                ('accounting_account', models.CharField(blank=True, max_length=200, null=True, verbose_name='Accounting account')),
                ('entries_to_reconcile', models.IntegerField(blank=True, default=0, null=True, verbose_name='Entries to reconcile')),
                ('entries_late_to_reconcile', models.IntegerField(blank=True, default=0, null=True, verbose_name='Entries late to reconcile')),
                ('can_be_reconciled', models.BooleanField(default=False, verbose_name='Can be reconciled')),
                ('author', models.ForeignKey(help_text='The user object that created this model', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BankEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_private', models.BooleanField(default=True, help_text='Is this entry private to the the user that added it ?', verbose_name='Is private')),
                ('date', models.DateTimeField(blank=True, verbose_name='Operation date')),
                ('value_date', models.DateTimeField(blank=True, verbose_name='value date')),
                ('label', models.TextField(blank=True, default='Miscellaneous payment', max_length=200, verbose_name='Description/Label')),
                ('debit', models.IntegerField(blank=True, default=0, null=True, verbose_name='Debit')),
                ('credit', models.IntegerField(blank=True, default=0, null=True, verbose_name='Credit')),
                ('check_transfer_number', models.CharField(blank=True, max_length=200, verbose_name='Number (Check/Transfer NÂ°)')),
                ('check_transfer_sender', models.CharField(blank=True, max_length=200, verbose_name='Sender (Check/Transfer sender)')),
                ('bank_of_check', models.CharField(blank=True, max_length=200, verbose_name='Bank (Bank of Check)')),
                ('accounting_account', models.CharField(blank=True, max_length=200, verbose_name='Accounting account')),
                ('subledger_account', models.CharField(blank=True, max_length=200, verbose_name='Subledger account')),
                ('category', models.CharField(blank=True, max_length=200, verbose_name='Category')),
                ('balance', models.IntegerField(blank=True, null=True, verbose_name='balance')),
                ('author', models.ForeignKey(help_text='The user object that created this model', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankaccount', verbose_name='Bank Account')),
            ],
            options={
                'verbose_name': 'Bank Entry',
                'verbose_name_plural': 'Bank Entries',
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='The full name of your Company/Organization', max_length=200, verbose_name='Name')),
                ('address', models.TextField(blank=True, help_text='Please mention here the full address of your Company/Organization', null=True, verbose_name='Full Address')),
                ('google_map_url', models.TextField(blank=True, help_text='Google Map URL of the Company/Organization', null=True, verbose_name='Google Map URL')),
                ('po_box', models.CharField(blank=True, help_text='Please mention the postal office box of your Company/Organization', max_length=200, null=True, verbose_name='P.O. Box')),
                ('town', models.CharField(blank=True, help_text='Indicate the town address of your Company/Organization', max_length=200, verbose_name='Town')),
                ('country', models.CharField(blank=True, default='Burundi', help_text='Indicate the country where your Company/Organization is located and/or registered', max_length=200, verbose_name='Country')),
                ('state_province', models.CharField(blank=True, default='Bujumbura', help_text='Indicate the State or Province where your Company/Organization is located and/or registered', max_length=200, verbose_name='State/Province')),
                ('main_currency', models.CharField(blank=True, default='Fbu', help_text='What is the Currency used by your Company/Organization', max_length=200, verbose_name='Main currency')),
                ('phone', models.CharField(blank=True, help_text='The Phone number of your Company/Organization', max_length=30, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, help_text='The email address of your Company/Organization', max_length=255, verbose_name='Email')),
                ('website', models.URLField(blank=True, help_text='The website of your Company/Organization', max_length=900, verbose_name='Web')),
                ('logo', models.FileField(blank=True, help_text='PNG or JPEG, will be used on various documents related to your Company/Organization', upload_to='media/uploads', validators=[manoti.validators.validate_file_size, manoti.validators.validate_document_file_extension], verbose_name='Logo')),
                ('logo_squarred', models.FileField(blank=True, help_text='PNG or JPEG, used for branding accross this platform', upload_to='media/uploads', validators=[manoti.validators.validate_file_size, manoti.validators.validate_document_file_extension], verbose_name='Logo (squarred)')),
                ('note', models.TextField(blank=True, help_text='Any additional note or information about the Company/Organization', null=True, verbose_name='Notes')),
                ('manager_name', models.CharField(blank=True, help_text='Manager(s) name (CEO, director, president...)', max_length=200, verbose_name='Manager(s) name (CEO, director, president...)')),
                ('data_protection_officer', models.CharField(blank=True, help_text='If your organisation is located in the EU, this field is required', max_length=200, verbose_name='Data Protection Officer (DPO, Data Privacy or GDPR contact)')),
                ('capital', models.IntegerField(blank=True, null=True, verbose_name='Capital')),
                ('business_entity_type', models.CharField(blank=True, help_text='If your organisation is located in the EU, this field is required', max_length=200, null=True, verbose_name='Business entity type')),
                ('professional_id_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 1')),
                ('professional_id_2', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 2')),
                ('professional_id_3', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 3')),
                ('professional_id_4', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 4')),
                ('professional_id_5', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 5')),
                ('professional_id_6', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 6')),
                ('vat_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='VAT ID')),
                ('registre_de_commerce', models.CharField(blank=True, max_length=200, null=True, verbose_name='Registre de Commerce')),
                ('object_of_the_company', models.TextField(blank=True, max_length=900, null=True, verbose_name='Object of the company')),
                ('fiscal_year', models.CharField(choices=[('1', 'January'), ('2', 'February'), ('3', 'March'), ('4', 'April'), ('5', 'May'), ('6', 'June'), ('7', 'July'), ('8', 'August'), ('9', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], default='1', max_length=100, verbose_name='Starting month of the fiscal year')),
                ('sales_tax_is_used', models.BooleanField(default=False, verbose_name='Are Sales tax used by your Company/Organization?')),
                ('user', models.ForeignKey(help_text='The user object that owns Company/Organization', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessEntityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(blank=True, max_length=200, verbose_name='Last name / Label')),
                ('first_name', models.CharField(blank=True, help_text='Keep this field empty if this is a generic address', max_length=200, verbose_name='First name')),
                ('job_title', models.CharField(blank=True, max_length=200, verbose_name='Job Title')),
                ('address', models.TextField(blank=True, help_text='The full address of the contact', null=True, verbose_name='Full address')),
                ('google_map', models.TextField(blank=True, help_text='Google Map URL of the contact', null=True, verbose_name='Google Map URL')),
                ('po_box', models.CharField(blank=True, help_text='Please mention the postal office box of your Company/Organization', max_length=200, null=True, verbose_name='P.O. Box')),
                ('town', models.CharField(blank=True, help_text='Indicate the town address of your contact', max_length=200, verbose_name='Town')),
                ('country', models.CharField(blank=True, default='Burundi', help_text='Indicate the country where the contact is located and/or registered', max_length=200, verbose_name='Country')),
                ('state_province', models.CharField(blank=True, default='Bujumbura', help_text='Indicate the State or Province where the contact is located and/or registered', max_length=200, verbose_name='State/Province')),
                ('phone', models.CharField(blank=True, help_text='The phone number of the contact', max_length=30, null=True, verbose_name='Phone Number')),
                ('bus_phone', models.CharField(blank=True, help_text='The Office or business phone number of the contact', max_length=30, null=True, verbose_name='Business Phone Number')),
                ('mobile_phone', models.CharField(blank=True, help_text='The mobile phone number of the contact', max_length=30, null=True, verbose_name='Mobile Phone Number')),
                ('email', models.EmailField(blank=True, help_text='The email address of the contact', max_length=255, verbose_name='Email')),
                ('is_private', models.BooleanField(default=True, help_text='Is this entry private to the the user that added it ?', verbose_name='Is private')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('alert', models.BooleanField(default=False, verbose_name='Alerts')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date of creation')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_private', models.BooleanField(default=True, help_text='Is this entry private to the the user that added it ?', verbose_name='Is private')),
                ('reference', models.CharField(default='Draft', max_length=200, unique=True, verbose_name='Reference')),
                ('customer_reference', models.CharField(default='Draft', max_length=200, verbose_name='Reference Vendor')),
                ('customer_invoice_type', models.CharField(choices=[('standard', 'Standard invoice'), ('downpayment', 'Downpayment invoice'), ('credit', 'Credit Note')], default='standard', max_length=200, verbose_name='Status')),
                ('label', models.CharField(blank=True, max_length=200, verbose_name='Label')),
                ('date', models.DateTimeField(verbose_name='Invoice date')),
                ('payment_due', models.DateField(blank=True, null=True, verbose_name='Payment due on')),
                ('note_private', models.TextField(blank=True, null=True, verbose_name='Private note')),
                ('note_public', models.TextField(blank=True, null=True, verbose_name='Public Note')),
                ('total_tax_excl', models.IntegerField(default=0, verbose_name='Amount (excl. tax)')),
                ('tax_amount', models.IntegerField(default=0, verbose_name='Amount tax')),
                ('total_tax_incl', models.IntegerField(default=0, verbose_name='Amount (inc. tax)')),
                ('is_validated', models.BooleanField(default=False, verbose_name='Validated ?')),
                ('is_abandoned', models.BooleanField(default=False, verbose_name='Abandoned ?')),
                ('total_payment', models.IntegerField(default=0, verbose_name='Total payment')),
                ('author', models.ForeignKey(help_text='The user object that created this model', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bank_account', models.ForeignKey(help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankaccount', verbose_name='Bank account')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInvoiceContactType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(blank=True, max_length=200, verbose_name='Last name')),
                ('first_name', models.CharField(blank=True, max_length=200, verbose_name='First name')),
                ('is_administrator', models.BooleanField(default=False, verbose_name='Administrator ?')),
                ('is_employee', models.BooleanField(default=True, verbose_name='Employee')),
                ('po_box', models.CharField(blank=True, help_text='Please mention the postal office box of the employee', max_length=200, null=True, verbose_name='P.O. Box')),
                ('city', models.CharField(blank=True, default='Bujumbura', help_text='Indicate the city ot town address of the employee', max_length=200, verbose_name='City')),
                ('country', models.CharField(blank=True, default='Burundi', help_text='Indicate the country where the employee is located and/or registered', max_length=200, verbose_name='Country')),
                ('state_province', models.CharField(blank=True, default='Bujumbura', help_text='Indicate the State or Province where your the employee lives', max_length=200, verbose_name='State/Province')),
                ('mobile_phone', models.CharField(blank=True, help_text='The mobile Phone number of the employee', max_length=30, null=True, verbose_name='Mobile Phone Number')),
                ('business_phone', models.CharField(blank=True, help_text='The office or business Phone number of the employee', max_length=30, null=True, verbose_name='Business Phone Number')),
                ('email', models.EmailField(blank=True, help_text='The email address of the employee', max_length=255, verbose_name='Email')),
                ('note', models.TextField(blank=True, help_text='Any additional note or information about the employee', null=True, verbose_name='Notes')),
                ('signature', models.TextField(blank=True, null=True, verbose_name='Signature')),
                ('job_postion', models.CharField(blank=True, max_length=30, null=True, verbose_name='Job position')),
                ('average_hourly_rate', models.IntegerField(blank=True, null=True, verbose_name='Average hourly rate')),
                ('average_daily_rate', models.IntegerField(blank=True, null=True, verbose_name='Average Daily rate')),
                ('salary', models.IntegerField(blank=True, null=True, verbose_name='Salary')),
                ('hours_worked_per_week', models.IntegerField(blank=True, null=True, verbose_name='Hours worked (per week)')),
                ('employement_start', models.DateField(blank=True, help_text='Ex: 01/04/2019, The date when The employee started working for the company', null=True, verbose_name='Employement date begun')),
                ('employement_end', models.DateField(blank=True, help_text='Ex: 01/04/2019, The date when The employee left the company', null=True, verbose_name='Employement date ended')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('force_expense_report_validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='force_expense_report_validator', to=settings.AUTH_USER_MODEL, verbose_name='Force expense report validator')),
                ('force_leave_request_validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='force_leave_request_validator', to=settings.AUTH_USER_MODEL, verbose_name='Force leave request validator')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Supervisor')),
                ('user', models.ForeignKey(help_text='The user object related to the employee', on_delete=django.db.models.deletion.CASCADE, related_name='employee_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LineType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_private', models.BooleanField(default=True, help_text='Is this entry private to the the user that added it ?', verbose_name='Is private')),
                ('reference_number', models.IntegerField(default=1, verbose_name='Reference number')),
                ('reference', models.CharField(default='Draft', max_length=200, unique=True, verbose_name='Internal Reference')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('number', models.CharField(blank=True, max_length=200, verbose_name='Number (Check/Transfer NÂ°)')),
                ('sender', models.CharField(blank=True, max_length=200, verbose_name='Sender (Check/Transfer sender)')),
                ('bank_of_sender', models.CharField(blank=True, max_length=200, verbose_name='Bank (Bank of Check)')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Private note')),
                ('total', models.IntegerField(default=0, verbose_name='Total payment')),
                ('sens', models.IntegerField(choices=[(-1, 'Credit'), (1, 'Debit')], default=1, help_text='For an accounting account of a customer, use Credit to record a payment you have received\nFor an accounting account of a supplier, use Debit to record a payment you made', verbose_name='Sense ?')),
                ('author', models.ForeignKey(help_text='The user object that created this model', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bank_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankaccount', verbose_name='Account to Credit')),
                ('bank_entry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankentry', verbose_name='Bank Entry')),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.business')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentTerms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('days', models.IntegerField(default=0, null=True, verbose_name='Days')),
            ],
            options={
                'verbose_name': 'Payment rerm',
                'verbose_name_plural': 'Payment terms',
                'ordering': ('days',),
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, default='Mobile', help_text='The type of the phone device', max_length=200, verbose_name='Third party name')),
                ('phone_number', models.CharField(max_length=30, verbose_name='Phone Number')),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_private', models.BooleanField(default=True, help_text='Is this entry private to the the user that added it ?', verbose_name='Is private')),
                ('reference', models.CharField(default='Draft', max_length=200, verbose_name='Reference')),
                ('reference_number', models.IntegerField(default=1, verbose_name='Reference number')),
                ('customer_reference', models.CharField(blank=True, max_length=200, null=True, verbose_name='Customer reference')),
                ('timestamp', models.DateTimeField(blank=True, null=True, verbose_name='Date')),
                ('validity_duration', models.IntegerField(blank=True, default=30, help_text='days', null=True, verbose_name='Validity duration')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Delivery date')),
                ('note_private', models.TextField(blank=True, null=True, verbose_name='Private note')),
                ('note_public', models.TextField(blank=True, null=True, verbose_name='Public Note')),
                ('amount_excl_tax', models.IntegerField(default=0, verbose_name='Amount (excl. tax)')),
                ('tax', models.IntegerField(default=0, verbose_name='Amount tax')),
                ('amount_incl_tax', models.IntegerField(default=0, verbose_name='Amount (inc. tax)')),
                ('is_validated', models.BooleanField(default=False, help_text='was this commercial proposal validated?', verbose_name='Is the commercial proposal validated')),
                ('is_billed', models.BooleanField(default=False, help_text='Determines if an invoice was created from this commercial invoice', verbose_name='Is the commercial proposal Billed?')),
                ('author', models.ForeignKey(help_text='The user object that created this model', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('availability_delay', models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.availabilitydelay', verbose_name='Availability delay (after order)')),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.business')),
            ],
            options={
                'verbose_name': 'Commercial proposal',
                'verbose_name_plural': 'Commercial proposals',
                'ordering': ('timestamp',),
            },
        ),
        migrations.CreateModel(
            name='ProposalDocumentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The full name of your Company/Organization', max_length=200, verbose_name='Name')),
                ('attachment', models.FileField(blank=True, upload_to='media/uploads', validators=[manoti.validators.validate_file_size], verbose_name='File attached')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Content of the document')),
            ],
        ),
        migrations.CreateModel(
            name='ShippingMetod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='StatusChoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='ThirdParty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The full name of the Third Party', max_length=200, verbose_name='Third party name')),
                ('alias_name', models.CharField(blank=True, help_text='The Alias name used for other purposes', max_length=200, verbose_name='Alias name (commercial, trademark, ...)')),
                ('prospect_customer', models.CharField(blank=True, choices=[('prospect', 'Prospect'), ('prospect_and_customer', 'Prospect and Customer'), ('customer', 'Customer'), ('none', 'Not a Prospect nor a Customer')], help_text='Defines which type the thirdparty is', max_length=200, verbose_name='Prospect / Customer')),
                ('customer_code_number', models.IntegerField(blank=True, default=1, null=True, unique=True, verbose_name='Customer code number')),
                ('customer_code', models.CharField(blank=True, max_length=200, unique=True, verbose_name='Customer code')),
                ('is_vendor', models.BooleanField(default=False, verbose_name='Vendor ?')),
                ('vendor_code_number', models.IntegerField(blank=True, default=1, null=True, unique=True, verbose_name='Vendor code number')),
                ('vendor_code', models.CharField(blank=True, max_length=200, unique=True, verbose_name='Vendor code')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
                ('barcode', models.CharField(blank=True, max_length=200, null=True, verbose_name='Barcode')),
                ('address', models.TextField(blank=True, help_text='The full address of the Third party', null=True, verbose_name='Full address')),
                ('google_map', models.TextField(blank=True, help_text='Google Map URL of the Third party', null=True, verbose_name='Google Map URL')),
                ('po_box', models.CharField(blank=True, help_text='Please mention the postal office box of the Third party', max_length=200, null=True, verbose_name='P.O. Box')),
                ('town', models.CharField(blank=True, help_text='Indicate the town address of the Third party', max_length=200, verbose_name='Town')),
                ('country', models.CharField(blank=True, default='Burundi', help_text='Indicate the country where the Third party is located and/or registered', max_length=200, verbose_name='Country')),
                ('state_province', models.CharField(blank=True, default='Bujumbura', help_text='Indicate the State or Province where the Third party is located and/or registered', max_length=200, verbose_name='State/Province')),
                ('phone', models.CharField(blank=True, help_text='The Phone number of the Third party', max_length=30, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, help_text='The email address of the Third party', max_length=255, verbose_name='Email')),
                ('website', models.URLField(blank=True, help_text='The website of the Third party', max_length=900, verbose_name='Web')),
                ('professional_id_1', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 1')),
                ('professional_id_2', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 2')),
                ('professional_id_3', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 3')),
                ('professional_id_4', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 4')),
                ('professional_id_5', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 5')),
                ('professional_id_6', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional ID 6')),
                ('vat_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='VAT ID')),
                ('registre_de_commerce', models.CharField(blank=True, max_length=200, null=True, verbose_name='Registre de Commerce')),
                ('sales_tax_is_used', models.BooleanField(default=False, verbose_name='Are Sales tax used by this thirdparty?')),
                ('workforce', models.IntegerField(blank=True, default=1, verbose_name='workforce')),
                ('capital', models.IntegerField(blank=True, null=True, verbose_name='Capital')),
                ('logo', models.FileField(blank=True, help_text='PNG or JPEG, will be used on various documents related to your Company/Organization', upload_to='media/uploads', validators=[manoti.validators.validate_file_size, manoti.validators.validate_document_file_extension], verbose_name='Logo')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date of creation')),
                ('assigned_representative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.employee', verbose_name='Assigned representative')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.business')),
                ('business_entity_type', models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.businessentitytype', verbose_name='Business entity type')),
            ],
            options={
                'verbose_name': 'Third party',
                'verbose_name_plural': 'Third parties',
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_private', models.BooleanField(default=True, help_text='Is this entry private to the the user that added it ?', verbose_name='Is private')),
                ('reference_number', models.IntegerField(default=1, verbose_name='Reference number')),
                ('reference', models.CharField(default='Draft', max_length=200, unique=True, verbose_name='Internal Reference')),
                ('vendor_reference', models.CharField(max_length=200, null=True, verbose_name='Reference Vendor')),
                ('vendor_invoice_type', models.CharField(choices=[('standard', 'Standard invoice'), ('downpayment', 'Downpayment invoice'), ('credit', 'Credit Note')], default='standard', max_length=200, verbose_name='Status')),
                ('label', models.CharField(blank=True, max_length=200, verbose_name='Label')),
                ('date', models.DateTimeField(verbose_name='Invoice date')),
                ('payment_due', models.DateTimeField(blank=True, null=True, verbose_name='Payment due on')),
                ('note_private', models.TextField(blank=True, null=True, verbose_name='Private note')),
                ('note_public', models.TextField(blank=True, null=True, verbose_name='Public Note')),
                ('total_tax_excl', models.IntegerField(default=0, verbose_name='Amount (excl. tax)')),
                ('tax_amount', models.IntegerField(default=0, verbose_name='Amount tax')),
                ('total_tax_incl', models.IntegerField(default=0, verbose_name='Amount (inc. tax)')),
                ('total_payment', models.IntegerField(default=0, verbose_name='Total payment')),
                ('remaining_unpaid', models.IntegerField(blank=True, default=0, verbose_name='Remaining unpaid')),
                ('is_validated', models.BooleanField(default=False, verbose_name='Validated ?')),
                ('is_abandoned', models.BooleanField(default=False, verbose_name='Abandoned ?')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Is paid ?')),
                ('author', models.ForeignKey(help_text='The user object that created this model', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bank_account', models.ForeignKey(help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankaccount', verbose_name='Bank account')),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.business')),
                ('payment_terms', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymentterms', verbose_name='Payment terms')),
                ('payment_type', models.ForeignKey(help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymenttype', verbose_name='Payment type')),
                ('third_party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdparty', verbose_name='Vendor')),
            ],
            options={
                'verbose_name': 'Vendor Invoice',
                'verbose_name_plural': 'Vendor Invoices',
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='VendorInvoiceContactType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, verbose_name='Key')),
                ('value', models.CharField(max_length=200, verbose_name='Value')),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoicePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0, verbose_name='Amount paid')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.payment')),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoiceLinkedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=200, verbose_name='Label')),
                ('link', models.URLField(blank=True, max_length=900, verbose_name='Link')),
                ('timestamp', models.DateTimeField(blank=True, verbose_name='Timestamp')),
                ('save_original_name', models.BooleanField(default=False, help_text="Save file on server with name 'PR##############-Original filename' (otherwise 'Original filename')", verbose_name='Save with original file name')),
                ('vendor_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.vendorinvoice', verbose_name='Vendor invoice')),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoiceLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('sku', models.CharField(blank=True, max_length=200, verbose_name='Vendor SKU')),
                ('sales_tax', models.IntegerField(verbose_name='Sales tax')),
                ('unit_price_tax_excl', models.IntegerField(verbose_name='Unit price (net)')),
                ('unit_price_tax_incl', models.IntegerField(blank=True, verbose_name='Unit price (Tax incl.)')),
                ('discount', models.IntegerField(blank=True, default=0, verbose_name='Discount')),
                ('quantity', models.IntegerField(default=1, verbose_name='Qty')),
                ('total_tax_excl', models.IntegerField(blank=True, default=0, verbose_name='Total (Tax excl.)')),
                ('total_tax_incl', models.IntegerField(blank=True, default=0, verbose_name='Total (Tax incl.)')),
                ('line_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.linetype', verbose_name='Type')),
                ('vendor_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.vendorinvoice', verbose_name='Vendor invoice')),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoiceContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.contact', verbose_name='Users | Contacts/Addresses')),
                ('contact_type', models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.vendorinvoicecontacttype', verbose_name='Users | Contacts/Addresses')),
                ('third_party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdparty', verbose_name='Third-party')),
                ('vendor_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.vendorinvoice', verbose_name='Vendor invoice')),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoiceAttachedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=200, verbose_name='Name')),
                ('attachment', models.FileField(blank=True, upload_to='media/uploads', validators=[manoti.validators.validate_file_size], verbose_name='File attached')),
                ('timestamp', models.DateTimeField(blank=True, verbose_name='Timestamp')),
                ('vendor_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.vendorinvoice', verbose_name='Vendor invoice')),
            ],
        ),
        migrations.AddField(
            model_name='thirdparty',
            name='third_party_type',
            field=models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdpartytype', verbose_name='Third-party type'),
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='The name of the social Network', max_length=200, verbose_name='Social networks')),
                ('url', models.URLField(blank=True, help_text='The URL of the social Network', null=True, verbose_name='Url')),
                ('network_id', models.CharField(blank=True, help_text='The social network handle or ID of your Company/Organization', max_length=200, null=True, verbose_name='Social Network ID')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.business')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(default='Draft', max_length=200, verbose_name='Reference')),
                ('is_vendor', models.BooleanField(default=False, help_text='Determines if either it is an incomming or outgoing purchase order, will be used whrn creating an invoice.', verbose_name='is Vendor ?')),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Delivery date')),
                ('note_private', models.TextField(blank=True, null=True, verbose_name='Private note')),
                ('note_public', models.TextField(blank=True, null=True, verbose_name='Public Note')),
                ('amount_excl_tax', models.IntegerField(default=0, verbose_name='Amount (excl. tax)')),
                ('tax', models.IntegerField(default=0, verbose_name='Amount tax')),
                ('amount_incl_tax', models.IntegerField(default=0, verbose_name='Amount (inc. tax)')),
                ('is_validated', models.BooleanField(default=False, help_text='Are you sure you want to validate this commercial proposal under name PR########?', verbose_name='Is the commercial proposal validated')),
                ('author', models.ForeignKey(help_text='The user object that created this model', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('document_template', models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.proposaldocumenttemplate', verbose_name='Default doc template')),
                ('is_signed', models.ForeignKey(blank=True, help_text='Determines if this commercial proposal accepted or refused by the customer or prospect', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.statuschoices', verbose_name='Set accepted/refused')),
                ('payment_terms', models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymentterms', verbose_name='Payment terms')),
                ('payment_type', models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymenttype', verbose_name='Payment method')),
                ('third_party', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdparty', verbose_name='Third party')),
            ],
            options={
                'verbose_name': 'Purchase order',
                'verbose_name_plural': 'Purchase orders',
                'ordering': ('timestamp',),
            },
        ),
        migrations.CreateModel(
            name='ProposalLinkedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, help_text='Label associated with the link', max_length=200, verbose_name='Label')),
                ('link', models.URLField(max_length=900, verbose_name='Link')),
                ('timestamp', models.DateTimeField(blank=True, verbose_name='Timestamp')),
                ('proposal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.proposal', verbose_name='Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('sales_tax', models.IntegerField(blank=True, null=True, verbose_name='Sales tax')),
                ('quantity', models.IntegerField(default=1, verbose_name='Qty')),
                ('unit_price', models.IntegerField(default=1, verbose_name='Unit price')),
                ('discount', models.IntegerField(blank=True, default=0, verbose_name='Discount')),
                ('total_tax_excl', models.IntegerField(blank=True, default=0, verbose_name='Total (Tax excl.)')),
                ('total_tax_incl', models.IntegerField(blank=True, default=0, verbose_name='Total (Tax incl.)')),
                ('line_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.linetype', verbose_name='Type')),
                ('proposal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.proposal', verbose_name='Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalAttachedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=200, verbose_name='Name')),
                ('attachment', models.FileField(blank=True, upload_to='media/uploads', verbose_name='File attached')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('save_original_name', models.BooleanField(default=False, help_text="Save file on server with name 'PR##############-Original filename' (otherwise 'Original filename')", verbose_name='Save with original file name')),
                ('proposal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.proposal', verbose_name='Proposal')),
            ],
        ),
        migrations.AddField(
            model_name='proposal',
            name='document_template',
            field=models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.proposaldocumenttemplate', verbose_name='Default doc template'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='is_signed',
            field=models.ForeignKey(blank=True, help_text='Determines if this commercial proposal accepted or refused by the customer or prospect', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.statuschoices', verbose_name='Set accepted/refused'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='payment_terms',
            field=models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymentterms', verbose_name='Payment terms'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='payment_type',
            field=models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymenttype', verbose_name='Payment method'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='shipping_metod',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.shippingmetod', verbose_name='Shipping Method'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='source',
            field=models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.source', verbose_name='Source'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='third_party',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdparty', verbose_name='Third party'),
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_type',
            field=models.ForeignKey(help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymenttype', verbose_name='Payment type'),
        ),
        migrations.AddField(
            model_name='payment',
            name='third_party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdparty', verbose_name='Company'),
        ),
        migrations.CreateModel(
            name='CustomerInvoiceLinkedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=200, verbose_name='Name')),
                ('link', models.URLField(blank=True, max_length=900, verbose_name='Link')),
                ('timestamp', models.DateTimeField(blank=True, verbose_name='Timestamp')),
                ('save_original_name', models.BooleanField(default=False, help_text="Save file on server with name 'PR##############-Original filename' (otherwise 'Original filename')", verbose_name='Save with original file name')),
                ('cutomer_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.customerinvoice', verbose_name='Customer invoice')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInvoiceLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('sku', models.CharField(blank=True, max_length=200, verbose_name='Customer SKU')),
                ('sales_tax', models.IntegerField(verbose_name='Sales tax')),
                ('unit_price_tax_excl', models.IntegerField(verbose_name='Unit price (net)')),
                ('unit_price_tax_incl', models.IntegerField(verbose_name='Unit price (Tax incl.)')),
                ('discount', models.IntegerField(blank=True, default=0, verbose_name='Discount')),
                ('quantity', models.IntegerField(default=1, verbose_name='Qty')),
                ('cutomer_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.customerinvoice', verbose_name='Customer invoice')),
                ('line_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.linetype', verbose_name='Type')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInvoiceContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.contact', verbose_name='Users | Contacts/Addresses')),
                ('contact_type', models.ForeignKey(blank=True, help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.vendorinvoicecontacttype', verbose_name='Users | Contacts/Addresses')),
                ('cutomer_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.customerinvoice', verbose_name='Customer invoice')),
                ('third_party', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdparty', verbose_name='Third-party')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInvoiceAttachedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=200, verbose_name='Name')),
                ('attachment', models.FileField(blank=True, upload_to='media/uploads', validators=[manoti.validators.validate_file_size], verbose_name='File attached')),
                ('timestamp', models.DateTimeField(blank=True, verbose_name='Timestamp')),
                ('cutomer_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.customerinvoice', verbose_name='Customer invoice')),
            ],
        ),
        migrations.AddField(
            model_name='customerinvoice',
            name='payment_terms',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymentterms', verbose_name='Payment terms'),
        ),
        migrations.AddField(
            model_name='customerinvoice',
            name='payment_type',
            field=models.ForeignKey(help_text='You can change values from this list from the Setup >> Dictionnaries', null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymenttype', verbose_name='Payment type'),
        ),
        migrations.AddField(
            model_name='customerinvoice',
            name='third_party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdparty', verbose_name='Customer'),
        ),
        migrations.AddField(
            model_name='contact',
            name='third_party',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.thirdparty', verbose_name='Third party'),
        ),
        migrations.AddField(
            model_name='contact',
            name='title',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.title', verbose_name='title'),
        ),
        migrations.CreateModel(
            name='BusinessAccountant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text="The full name of the Company/Organization's accountant", max_length=200, verbose_name='Full name')),
                ('address', models.TextField(blank=True, help_text="Please mention here the full address of your Company/Organization's accountant", null=True, verbose_name='Full Address')),
                ('po_box', models.CharField(blank=True, help_text="Please mention the postal office box of your Company/Organization's accountant", max_length=200, null=True, verbose_name='P.O. Box')),
                ('town', models.CharField(blank=True, help_text="Indicate the town address of your Company/Organization's accountant", max_length=200, verbose_name='Town')),
                ('country', models.CharField(blank=True, default='Burundi', help_text="Indicate the country where Company/Organization's accountant is located and/or registered", max_length=200, verbose_name='Country')),
                ('state_province', models.CharField(blank=True, default='Bujumbura', help_text="Indicate the State or Province where Company/Organization's accountant is located and/or registered", max_length=200, verbose_name='State/Province')),
                ('phone', models.CharField(blank=True, help_text="The Phone number of your Company/Organization's accountant", max_length=30, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, help_text="The email address of your Company/Organization's accountant", max_length=255, verbose_name='Email')),
                ('website', models.URLField(blank=True, help_text="The website of your Company/Organization's accountant", max_length=900, verbose_name='Web')),
                ('code', models.CharField(blank=True, help_text="The full name of the Company/Organization's accountant", max_length=200, verbose_name='Accountant code')),
                ('note', models.TextField(blank=True, help_text="Any additional note or information about the Company/Organization's accountant", null=True, verbose_name='Notes')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.business')),
            ],
        ),
        migrations.CreateModel(
            name='BankEntryAttachedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=300, verbose_name='Name')),
                ('attachment', models.FileField(blank=True, upload_to='media/uploads', validators=[manoti.validators.validate_file_size], verbose_name='File attached')),
                ('timestamp', models.DateTimeField(blank=True, verbose_name='Timestamp')),
                ('save_original_name', models.BooleanField(default=False, help_text="Save file on server with name 'PR##############-Original filename' (otherwise 'Original filename')", verbose_name='Save with original file name')),
                ('entry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankentry', verbose_name='Bank Entry')),
            ],
        ),
        migrations.AddField(
            model_name='bankentry',
            name='payment_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.paymenttype', verbose_name='Payment Type'),
        ),
        migrations.CreateModel(
            name='BankAccountLinkedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, help_text='The name of the file', max_length=200, verbose_name='Name')),
                ('link', models.URLField(blank=True, max_length=900, verbose_name='Link')),
                ('timestamp', models.DateTimeField(blank=True, verbose_name='Timestamp')),
                ('bank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankaccount', verbose_name='Bank Account')),
            ],
        ),
        migrations.CreateModel(
            name='BankAccountAttachedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, help_text='The name of the file', max_length=300, verbose_name='Name')),
                ('attachment', models.FileField(blank=True, upload_to='media/uploads', validators=[manoti.validators.validate_file_size], verbose_name='File attached')),
                ('timestamp', models.DateTimeField(blank=True, verbose_name='Timestamp')),
                ('save_original_name', models.BooleanField(default=False, help_text="Save file on server with name 'PR##############-Original filename' (otherwise 'Original filename')", verbose_name='Save with original file name')),
                ('bank', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manoti.bankaccount', verbose_name='Bank Account')),
            ],
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manoti.business', verbose_name='Business'),
        ),
    ]
